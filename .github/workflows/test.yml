name: Test

on:
  push:
    branches: [main, "plugin-manager"]
    paths-ignore:
      - "**.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "**.md"

permissions: read-all

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: ${{ matrix.os_ida.name}}/py${{ matrix.python-version }}
    runs-on: ${{ matrix.os_ida.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.13"]
        os_ida:
          - name: IDA 9.2 on Linux
            os: ubuntu-latest
            ida_version: "9.2"
            slug: "release/9.2/ida-essential/ida-essential_92_x64linux.run"
            idat_path: "/idat"
            default_path: "/home/runner/.local/share/applications/IDA Essential 9.2"

          - name: IDA 9.2 on Windows
            os: windows-latest
            ida_version: "9.2"
            slug: "release/9.2/ida-essential/ida-essential_92_x64win.exe"
            idat_path: "/idat.exe"
            default_path: "C:\\Program Files\\IDA Essential 9.2"

          - name: IDA 9.2 on macOS (Intel)
            os: macos-latest
            ida_version: "9.2"
            slug: "release/9.2/ida-essential/ida-essential_92_x64mac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.2.app"

          - name: IDA 9.2 on macOS (ARM)
            os: macos-latest
            ida_version: "9.2"
            slug: "release/9.2/ida-essential/ida-essential_92_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.2.app"

          - name: IDA 9.1 on Linux
            os: ubuntu-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-essential/ida-essential_91_x64linux.run"
            idat_path: "/idat"
            default_path: "/home/runner/.local/share/applications/IDA Essential 9.1"

          - name: IDA 9.1 on Windows
            os: windows-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-essential/ida-essential_91_x64win.exe"
            idat_path: "/idat.exe"
            default_path: "C:\\Program Files\\IDA Essential 9.1"

          - name: IDA 9.1 on macOS (Intel)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-essential/ida-essential_91_x64mac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.1.app"

          - name: IDA 9.1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-essential/ida-essential_91_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.1.app"

          - name: IDA 9.0 on Linux
            os: ubuntu-latest
            ida_version: "9.0"
            slug: "release/9.0/ida-essential/ida-essential_90_x64linux.run"
            idat_path: "/idat"
            default_path: "/home/runner/.local/share/applications/IDA Essential 9.0"

          - name: IDA 9.0 on Windows
            os: windows-latest
            ida_version: "9.0"
            slug: "release/9.0/ida-essential/ida-essential_90_x64win.exe"
            idat_path: "/idat.exe"
            default_path: "C:\\Program Files\\IDA Essential 9.0"

          - name: IDA 9.0 on macOS (Intel)
            os: macos-latest
            ida_version: "9.0"
            slug: "release/9.0/ida-essential/ida-essential_90_x64mac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.0.app"

          - name: IDA 9.0 on macOS (ARM)
            os: macos-latest
            ida_version: "9.0"
            slug: "release/9.0/ida-essential/ida-essential_90_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.0.app"

          # #################################################################
          # SP releases
          - name: IDA 9.0 SP1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.0sp1"
            slug: "release/9.0sp1/ida-pro/ida-pro_90sp1_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Professional 9.0sp1.app"

          # #################################################################
          # other product versions
          - name: IDA Home 9.1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-home/ida-home-pc_91_armmac.app.zip"
            idat_path: ""
            default_path: "/Applications/IDA Home 9.1.app"

          - name: IDA Free 9.1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-free/ida-free-pc_91_armmac.app.zip"
            idat_path: ""
            default_path: "/Applications/IDA Free 9.1.app"

          - name: IDA Essential 9.1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-essential/ida-essential_91_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Essential 9.1.app"

          - name: IDA Pro 9.1 on macOS (ARM)
            os: macos-latest
            ida_version: "9.1"
            slug: "release/9.1/ida-pro/ida-pro_91_armmac.app.zip"
            idat_path: "/Contents/MacOS/idat"
            default_path: "/Applications/IDA Professional 9.1.app"

          # Classroom doesn't work with the Essentials license we're using in CI
          # - name: IDA Classroom 9.1 on macOS (ARM)
          #   os: macos-latest
          #   ida_version: "9.1"
          #   slug: "release/9.1/ida-free/ida-classroom-free_91_armmac.app.zip"
          #   idat_path: "/Contents/MacOS/idat"
          #   default_path: "/Applications/IDA Classroom 9.1.app"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python with uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --no-sources --extra dev --extra test

      - name: Install IDA ${{ matrix.os_ida.ida_version }}
        run: |
          uv run hcli --disable-updates ida install --download-id ${{ matrix.os_ida.slug }} --license-id ${{ secrets.IDA_LICENSE_ID }} --install-dir "${{ runner.temp }}/app/ida/" --set-default
        env:
          HCLI_API_KEY: ${{ secrets.HCLI_API_KEY }}
          IDA_LICENSE_ID: ${{ secrets.IDA_LICENSE_ID }}

      - name: Run idat
        if: ${{ matrix.os_ida.idat_path != '' }}
        continue-on-error: true
        run: |
          ${{ runner.temp }}/app/ida/${{ matrix.os_ida.idat_path }} -a -A -c -t -L"${{ runner.temp }}/ida.log" -S"${{ github.workspace }}/tests/scripts/hi.py" | echo "ok"

      - name: Check idat output (unix)
        if: ${{ matrix.os_ida.idat_path != '' && matrix.os_ida.os != 'windows-latest' }}
        run: |
          cat "${{ runner.temp }}/ida.log"
          if [[ ! -f "${{ runner.temp }}/ida.log" ]]; then
            echo "ERROR: Log file does not exist"
            exit 1
          fi

      - name: Check idat output (windows)
        if: ${{ matrix.os_ida.idat_path != '' && matrix.os_ida.os == 'windows-latest' }}
        shell: pwsh
        run: |
          Get-Content "${{ runner.temp }}\ida.log"
          if (!(Test-Path "${{ runner.temp }}\ida.log")) {
            Write-Error "ERROR: Log file does not exist"
            exit 1
          }

      - name: Install IDA ${{ matrix.os_ida.ida_version }} (default location)
        run: |
          uv run hcli --disable-updates ida install --download-id ${{ matrix.os_ida.slug }} --license-id ${{ secrets.IDA_LICENSE_ID }} --set-default
        env:
          HCLI_API_KEY: ${{ secrets.HCLI_API_KEY }}
          IDA_LICENSE_ID: ${{ secrets.IDA_LICENSE_ID }}

      - name: Check default install location (unix)
        if: ${{ matrix.os_ida.os != 'windows-latest' }}
        run: |
          if [[ ! -d "${{ matrix.os_ida.default_path }}" ]]; then
            echo "ERROR: Default installation path does not exist: ${{matrix.os_ida.default_path }}"
            exit 1
          fi

      - name: Check default install location (windows)
        if: ${{ matrix.os_ida.os == 'windows-latest' }}
        run: |
          if (!(Test-Path "${{ matrix.os_ida.default_path }}")) {
            Write-Error "ERROR: Default installation path does not exist: ${{ matrix.os_ida.default_path }}"
            exit 1
          }

      - name: Run tests
        run: uv run pytest -v --log-cli-level=DEBUG tests/
        env:
          HCLI_API_KEY: ${{ secrets.HCLI_API_KEY }}
          HCLI_INSTALL_DIR: ${{ runner.temp }}/app/ida/
          HCLI_HAS_IDAT: ${{ matrix.os_ida.idat_path != '' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
