name: Binary Only

run-name: Build Binaries Only for v${{ github.event.inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version x.y.z'
        required: true
        type: string

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

env:
  UV_PYTHON: '3.13'

jobs:

  binary:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { os: ubuntu-latest,  platform: linux,   artifact-name: hcli-linux-x86_64 }
          - { os: windows-latest, platform: windows, artifact-name: hcli-windows-x86_64 }
          - { os: macos-latest,   platform: macos,   artifact-name: hcli-mac-arm64 }

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: v${{ github.event.inputs.version }}

      - name: Setup Python with uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python and dependencies
        run: |
          uv python install "${{ env.UV_PYTHON }}"
          uv sync --no-sources

      - name: Build binary
        run: uv run --no-sources --with pyinstaller pyinstaller hcli.spec

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: dist/${{ matrix.artifact-name }}*
          name: ${{ matrix.artifact-name }}-${{ needs.publish.outputs.version }}
          retention-days: 1
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: [binary]
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v5
        with:
          path: dist
          merge-multiple: true

      - name: Create/Update GitHub Release with binaries
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "dist/*"
          omitBodyDuringUpdate: true
          replacesArtifacts: false
          tag: v${{ github.event.inputs.version }}
          makeLatest: true